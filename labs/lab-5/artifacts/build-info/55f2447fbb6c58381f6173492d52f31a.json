{
	"id": "55f2447fbb6c58381f6173492d52f31a",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.9",
	"solcLongVersion": "0.8.9+commit.e5eed63a",
	"input": {
		"language": "Solidity",
		"sources": {
			"frenchFries.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.9;\n\ncontract EnumDemo{\n\n    // correnponds to 0,1,2\n    enum size {REGULAR,LARGE,SUPERSIZE}\n    // state variable\n    size choice;\n\n    // argument _choice is of type size \n    // normal function will write to the blockchain\n    function setChoice(size _choice) public {\n        if(uint(_choice) == 0){\n            choice = size.REGULAR;\n        } else {\n            if (uint(_choice)==1){\n                choice = size.LARGE;\n            }else {\n                choice = size.SUPERSIZE;\n            }\n        }\n    }\n\n    // view means wea re going to read from blockchain\n    // no writing \n    function getChoice() public view returns(size){\n        return choice;\n    } \n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"frenchFries.sol": {
				"EnumDemo": {
					"abi": [
						{
							"inputs": [],
							"name": "getChoice",
							"outputs": [
								{
									"internalType": "enum EnumDemo.size",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "enum EnumDemo.size",
									"name": "_choice",
									"type": "uint8"
								}
							],
							"name": "setChoice",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"frenchFries.sol\":57:729  contract EnumDemo{... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"frenchFries.sol\":57:729  contract EnumDemo{... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x16d831f6\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x67cb61b6\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"frenchFries.sol\":282:570  function setChoice(size _choice) public {... */\n    tag_3:\n      tag_5\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_6\n      swap2\n      swap1\n      tag_7\n      jump\t// in\n    tag_6:\n      tag_8\n      jump\t// in\n    tag_5:\n      stop\n        /* \"frenchFries.sol\":650:726  function getChoice() public view returns(size){... */\n    tag_4:\n      tag_9\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      tag_11\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"frenchFries.sol\":282:570  function setChoice(size _choice) public {... */\n    tag_8:\n        /* \"frenchFries.sol\":352:353  0 */\n      0x00\n        /* \"frenchFries.sol\":340:347  _choice */\n      dup2\n        /* \"frenchFries.sol\":335:348  uint(_choice) */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_14\n      jumpi\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n    tag_14:\n        /* \"frenchFries.sol\":335:353  uint(_choice) == 0 */\n      eq\n        /* \"frenchFries.sol\":332:564  if(uint(_choice) == 0){... */\n      iszero\n      tag_17\n      jumpi\n        /* \"frenchFries.sol\":377:389  size.REGULAR */\n      0x00\n        /* \"frenchFries.sol\":368:374  choice */\n      dup1\n      0x00\n        /* \"frenchFries.sol\":368:389  choice = size.REGULAR */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x02\n      dup2\n      gt\n      iszero\n      tag_18\n      jumpi\n      tag_19\n      tag_16\n      jump\t// in\n    tag_19:\n    tag_18:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"frenchFries.sol\":332:564  if(uint(_choice) == 0){... */\n      jump(tag_20)\n    tag_17:\n        /* \"frenchFries.sol\":439:440  1 */\n      0x01\n        /* \"frenchFries.sol\":429:436  _choice */\n      dup2\n        /* \"frenchFries.sol\":424:437  uint(_choice) */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_21\n      jumpi\n      tag_22\n      tag_16\n      jump\t// in\n    tag_22:\n    tag_21:\n        /* \"frenchFries.sol\":424:440  uint(_choice)==1 */\n      eq\n        /* \"frenchFries.sol\":420:554  if (uint(_choice)==1){... */\n      iszero\n      tag_23\n      jumpi\n        /* \"frenchFries.sol\":468:478  size.LARGE */\n      0x01\n        /* \"frenchFries.sol\":459:465  choice */\n      0x00\n      dup1\n        /* \"frenchFries.sol\":459:478  choice = size.LARGE */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x02\n      dup2\n      gt\n      iszero\n      tag_24\n      jumpi\n      tag_25\n      tag_16\n      jump\t// in\n    tag_25:\n    tag_24:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"frenchFries.sol\":420:554  if (uint(_choice)==1){... */\n      jump(tag_26)\n    tag_23:\n        /* \"frenchFries.sol\":525:539  size.SUPERSIZE */\n      0x02\n        /* \"frenchFries.sol\":516:522  choice */\n      0x00\n      dup1\n        /* \"frenchFries.sol\":516:539  choice = size.SUPERSIZE */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x02\n      dup2\n      gt\n      iszero\n      tag_27\n      jumpi\n      tag_28\n      tag_16\n      jump\t// in\n    tag_28:\n    tag_27:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"frenchFries.sol\":420:554  if (uint(_choice)==1){... */\n    tag_26:\n        /* \"frenchFries.sol\":332:564  if(uint(_choice) == 0){... */\n    tag_20:\n        /* \"frenchFries.sol\":282:570  function setChoice(size _choice) public {... */\n      pop\n      jump\t// out\n        /* \"frenchFries.sol\":650:726  function getChoice() public view returns(size){... */\n    tag_10:\n        /* \"frenchFries.sol\":691:695  size */\n      0x00\n        /* \"frenchFries.sol\":713:719  choice */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"frenchFries.sol\":706:719  return choice */\n      swap1\n      pop\n        /* \"frenchFries.sol\":650:726  function getChoice() public view returns(size){... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_31:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:439   */\n    tag_33:\n        /* \"#utility.yul\":413:414   */\n      0x03\n        /* \"#utility.yul\":406:411   */\n      dup2\n        /* \"#utility.yul\":403:415   */\n      lt\n        /* \"#utility.yul\":393:433   */\n      tag_44\n      jumpi\n        /* \"#utility.yul\":429:430   */\n      0x00\n        /* \"#utility.yul\":426:427   */\n      dup1\n        /* \"#utility.yul\":419:431   */\n      revert\n        /* \"#utility.yul\":393:433   */\n    tag_44:\n        /* \"#utility.yul\":334:439   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":445:596   */\n    tag_34:\n        /* \"#utility.yul\":497:502   */\n      0x00\n        /* \"#utility.yul\":535:541   */\n      dup2\n        /* \"#utility.yul\":522:542   */\n      calldataload\n        /* \"#utility.yul\":513:542   */\n      swap1\n      pop\n        /* \"#utility.yul\":551:590   */\n      tag_46\n        /* \"#utility.yul\":584:589   */\n      dup2\n        /* \"#utility.yul\":551:590   */\n      tag_33\n      jump\t// in\n    tag_46:\n        /* \"#utility.yul\":445:596   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":602:943   */\n    tag_7:\n        /* \"#utility.yul\":667:673   */\n      0x00\n        /* \"#utility.yul\":716:718   */\n      0x20\n        /* \"#utility.yul\":704:713   */\n      dup3\n        /* \"#utility.yul\":695:702   */\n      dup5\n        /* \"#utility.yul\":691:714   */\n      sub\n        /* \"#utility.yul\":687:719   */\n      slt\n        /* \"#utility.yul\":684:803   */\n      iszero\n      tag_48\n      jumpi\n        /* \"#utility.yul\":722:801   */\n      tag_49\n      tag_31\n      jump\t// in\n    tag_49:\n        /* \"#utility.yul\":684:803   */\n    tag_48:\n        /* \"#utility.yul\":842:843   */\n      0x00\n        /* \"#utility.yul\":867:926   */\n      tag_50\n        /* \"#utility.yul\":918:925   */\n      dup5\n        /* \"#utility.yul\":909:915   */\n      dup3\n        /* \"#utility.yul\":898:907   */\n      dup6\n        /* \"#utility.yul\":894:916   */\n      add\n        /* \"#utility.yul\":867:926   */\n      tag_34\n      jump\t// in\n    tag_50:\n        /* \"#utility.yul\":857:926   */\n      swap2\n      pop\n        /* \"#utility.yul\":813:936   */\n      pop\n        /* \"#utility.yul\":602:943   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":949:1129   */\n    tag_16:\n        /* \"#utility.yul\":997:1074   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":994:995   */\n      0x00\n        /* \"#utility.yul\":987:1075   */\n      mstore\n        /* \"#utility.yul\":1094:1098   */\n      0x21\n        /* \"#utility.yul\":1091:1092   */\n      0x04\n        /* \"#utility.yul\":1084:1099   */\n      mstore\n        /* \"#utility.yul\":1118:1122   */\n      0x24\n        /* \"#utility.yul\":1115:1116   */\n      0x00\n        /* \"#utility.yul\":1108:1123   */\n      revert\n        /* \"#utility.yul\":1135:1246   */\n    tag_35:\n        /* \"#utility.yul\":1214:1215   */\n      0x03\n        /* \"#utility.yul\":1207:1212   */\n      dup2\n        /* \"#utility.yul\":1204:1216   */\n      lt\n        /* \"#utility.yul\":1194:1240   */\n      tag_53\n      jumpi\n        /* \"#utility.yul\":1220:1238   */\n      tag_54\n      tag_16\n      jump\t// in\n    tag_54:\n        /* \"#utility.yul\":1194:1240   */\n    tag_53:\n        /* \"#utility.yul\":1135:1246   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1252:1375   */\n    tag_36:\n        /* \"#utility.yul\":1295:1302   */\n      0x00\n        /* \"#utility.yul\":1324:1329   */\n      dup2\n        /* \"#utility.yul\":1313:1329   */\n      swap1\n      pop\n        /* \"#utility.yul\":1330:1369   */\n      tag_56\n        /* \"#utility.yul\":1363:1368   */\n      dup3\n        /* \"#utility.yul\":1330:1369   */\n      tag_35\n      jump\t// in\n    tag_56:\n        /* \"#utility.yul\":1252:1375   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1381:1504   */\n    tag_37:\n        /* \"#utility.yul\":1435:1444   */\n      0x00\n        /* \"#utility.yul\":1468:1498   */\n      tag_58\n        /* \"#utility.yul\":1492:1497   */\n      dup3\n        /* \"#utility.yul\":1468:1498   */\n      tag_36\n      jump\t// in\n    tag_58:\n        /* \"#utility.yul\":1455:1498   */\n      swap1\n      pop\n        /* \"#utility.yul\":1381:1504   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1510:1649   */\n    tag_38:\n        /* \"#utility.yul\":1601:1642   */\n      tag_60\n        /* \"#utility.yul\":1636:1641   */\n      dup2\n        /* \"#utility.yul\":1601:1642   */\n      tag_37\n      jump\t// in\n    tag_60:\n        /* \"#utility.yul\":1596:1599   */\n      dup3\n        /* \"#utility.yul\":1589:1643   */\n      mstore\n        /* \"#utility.yul\":1510:1649   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1655:1885   */\n    tag_12:\n        /* \"#utility.yul\":1752:1756   */\n      0x00\n        /* \"#utility.yul\":1790:1792   */\n      0x20\n        /* \"#utility.yul\":1779:1788   */\n      dup3\n        /* \"#utility.yul\":1775:1793   */\n      add\n        /* \"#utility.yul\":1767:1793   */\n      swap1\n      pop\n        /* \"#utility.yul\":1803:1878   */\n      tag_62\n        /* \"#utility.yul\":1875:1876   */\n      0x00\n        /* \"#utility.yul\":1864:1873   */\n      dup4\n        /* \"#utility.yul\":1860:1877   */\n      add\n        /* \"#utility.yul\":1851:1857   */\n      dup5\n        /* \"#utility.yul\":1803:1878   */\n      tag_38\n      jump\t// in\n    tag_62:\n        /* \"#utility.yul\":1655:1885   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220bbb9de6df611cb0835ca45d13fc106511ac3a0e4fb3aed04fdc0cbdfbdd0d34164736f6c63430008090033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5061026d806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806316d831f61461003b57806367cb61b614610057575b600080fd5b61005560048036038101906100509190610178565b610075565b005b61005f610138565b60405161006c919061021c565b60405180910390f35b600081600281111561008a576100896101a5565b5b14156100bf5760008060006101000a81548160ff021916908360028111156100b5576100b46101a5565b5b0217905550610135565b60018160028111156100d4576100d36101a5565b5b14156101095760016000806101000a81548160ff021916908360028111156100ff576100fe6101a5565b5b0217905550610134565b60026000806101000a81548160ff0219169083600281111561012e5761012d6101a5565b5b02179055505b5b50565b60008060009054906101000a900460ff16905090565b600080fd5b6003811061016057600080fd5b50565b60008135905061017281610153565b92915050565b60006020828403121561018e5761018d61014e565b5b600061019c84828501610163565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600381106101e5576101e46101a5565b5b50565b60008190506101f6826101d4565b919050565b6000610206826101e8565b9050919050565b610216816101fb565b82525050565b6000602082019050610231600083018461020d565b9291505056fea2646970667358221220bbb9de6df611cb0835ca45d13fc106511ac3a0e4fb3aed04fdc0cbdfbdd0d34164736f6c63430008090033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26D DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x16D831F6 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0x67CB61B6 EQ PUSH2 0x57 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x55 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x178 JUMP JUMPDEST PUSH2 0x75 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5F PUSH2 0x138 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6C SWAP2 SWAP1 PUSH2 0x21C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x8A JUMPI PUSH2 0x89 PUSH2 0x1A5 JUMP JUMPDEST JUMPDEST EQ ISZERO PUSH2 0xBF JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xB5 JUMPI PUSH2 0xB4 PUSH2 0x1A5 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH2 0x135 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xD4 JUMPI PUSH2 0xD3 PUSH2 0x1A5 JUMP JUMPDEST JUMPDEST EQ ISZERO PUSH2 0x109 JUMPI PUSH1 0x1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xFF JUMPI PUSH2 0xFE PUSH2 0x1A5 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH2 0x134 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x12E JUMPI PUSH2 0x12D PUSH2 0x1A5 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x160 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x172 DUP2 PUSH2 0x153 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18E JUMPI PUSH2 0x18D PUSH2 0x14E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x19C DUP5 DUP3 DUP6 ADD PUSH2 0x163 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x1E5 JUMPI PUSH2 0x1E4 PUSH2 0x1A5 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x1F6 DUP3 PUSH2 0x1D4 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x206 DUP3 PUSH2 0x1E8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x216 DUP2 PUSH2 0x1FB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x231 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x20D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBB 0xB9 0xDE PUSH14 0xF611CB0835CA45D13FC106511AC3 LOG0 0xE4 0xFB GASPRICE 0xED DIV REVERT 0xC0 0xCB 0xDF 0xBD 0xD0 0xD3 COINBASE PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ",
							"sourceMap": "57:672:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@getChoice_57": {
									"entryPoint": 312,
									"id": 57,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@setChoice_48": {
									"entryPoint": 117,
									"id": 48,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_enum$_size_$5": {
									"entryPoint": 355,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_enum$_size_$5": {
									"entryPoint": 376,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_enum$_size_$5_to_t_uint8_fromStack": {
									"entryPoint": 525,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_enum$_size_$5__to_t_uint8__fromStack_reversed": {
									"entryPoint": 540,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_enum$_size_$5": {
									"entryPoint": 488,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_enum$_size_$5_to_t_uint8": {
									"entryPoint": 507,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x21": {
									"entryPoint": 421,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 334,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_assert_t_enum$_size_$5": {
									"entryPoint": 468,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_enum$_size_$5": {
									"entryPoint": 339,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1888:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "383:56:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "417:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "426:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "429:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "419:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "419:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "419:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "406:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "413:1:1",
																				"type": "",
																				"value": "3"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "403:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "403:12:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "396:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "396:20:1"
															},
															"nodeType": "YulIf",
															"src": "393:40:1"
														}
													]
												},
												"name": "validator_revert_t_enum$_size_$5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "376:5:1",
														"type": ""
													}
												],
												"src": "334:105:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "503:93:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "513:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "535:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "522:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "522:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "513:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "584:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_enum$_size_$5",
																	"nodeType": "YulIdentifier",
																	"src": "551:32:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "551:39:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "551:39:1"
														}
													]
												},
												"name": "abi_decode_t_enum$_size_$5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "481:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "489:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "497:5:1",
														"type": ""
													}
												],
												"src": "445:151:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "674:269:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "720:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "722:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "722:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "722:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "695:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "704:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "691:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "691:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "716:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "687:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "687:32:1"
															},
															"nodeType": "YulIf",
															"src": "684:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "813:123:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "828:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "842:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "832:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "857:69:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "898:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "909:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "894:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "894:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "918:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_enum$_size_$5",
																			"nodeType": "YulIdentifier",
																			"src": "867:26:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "867:59:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "857:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_enum$_size_$5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "644:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "655:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "667:6:1",
														"type": ""
													}
												],
												"src": "602:341:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "977:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "994:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "997:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "987:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "987:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "987:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1091:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1094:4:1",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1084:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1084:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1084:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1115:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1118:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1108:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1108:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1108:15:1"
														}
													]
												},
												"name": "panic_error_0x21",
												"nodeType": "YulFunctionDefinition",
												"src": "949:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1184:62:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1218:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x21",
																				"nodeType": "YulIdentifier",
																				"src": "1220:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1220:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1220:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1207:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1214:1:1",
																				"type": "",
																				"value": "3"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1204:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1204:12:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1197:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1197:20:1"
															},
															"nodeType": "YulIf",
															"src": "1194:46:1"
														}
													]
												},
												"name": "validator_assert_t_enum$_size_$5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1177:5:1",
														"type": ""
													}
												],
												"src": "1135:111:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1303:72:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1313:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1324:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1313:7:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1363:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_assert_t_enum$_size_$5",
																	"nodeType": "YulIdentifier",
																	"src": "1330:32:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1330:39:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1330:39:1"
														}
													]
												},
												"name": "cleanup_t_enum$_size_$5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1285:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1295:7:1",
														"type": ""
													}
												],
												"src": "1252:123:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1445:59:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1455:43:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1492:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_enum$_size_$5",
																	"nodeType": "YulIdentifier",
																	"src": "1468:23:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1468:30:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "1455:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_enum$_size_$5_to_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1425:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "1435:9:1",
														"type": ""
													}
												],
												"src": "1381:123:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1579:70:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1596:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1636:5:1"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_enum$_size_$5_to_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "1601:34:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1601:41:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1589:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1589:54:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1589:54:1"
														}
													]
												},
												"name": "abi_encode_t_enum$_size_$5_to_t_uint8_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1567:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1574:3:1",
														"type": ""
													}
												],
												"src": "1510:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1757:128:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1767:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1779:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1790:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1775:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1775:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1767:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1851:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1864:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1875:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1860:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1860:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_enum$_size_$5_to_t_uint8_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1803:47:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1803:75:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1803:75:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_enum$_size_$5__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1729:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1741:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1752:4:1",
														"type": ""
													}
												],
												"src": "1655:230:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_enum$_size_$5(value) {\n        if iszero(lt(value, 3)) { revert(0, 0) }\n    }\n\n    function abi_decode_t_enum$_size_$5(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_enum$_size_$5(value)\n    }\n\n    function abi_decode_tuple_t_enum$_size_$5(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_enum$_size_$5(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function validator_assert_t_enum$_size_$5(value) {\n        if iszero(lt(value, 3)) { panic_error_0x21() }\n    }\n\n    function cleanup_t_enum$_size_$5(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_size_$5(value)\n    }\n\n    function convert_t_enum$_size_$5_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_size_$5(value)\n    }\n\n    function abi_encode_t_enum$_size_$5_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_size_$5_to_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_enum$_size_$5__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_enum$_size_$5_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100365760003560e01c806316d831f61461003b57806367cb61b614610057575b600080fd5b61005560048036038101906100509190610178565b610075565b005b61005f610138565b60405161006c919061021c565b60405180910390f35b600081600281111561008a576100896101a5565b5b14156100bf5760008060006101000a81548160ff021916908360028111156100b5576100b46101a5565b5b0217905550610135565b60018160028111156100d4576100d36101a5565b5b14156101095760016000806101000a81548160ff021916908360028111156100ff576100fe6101a5565b5b0217905550610134565b60026000806101000a81548160ff0219169083600281111561012e5761012d6101a5565b5b02179055505b5b50565b60008060009054906101000a900460ff16905090565b600080fd5b6003811061016057600080fd5b50565b60008135905061017281610153565b92915050565b60006020828403121561018e5761018d61014e565b5b600061019c84828501610163565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600381106101e5576101e46101a5565b5b50565b60008190506101f6826101d4565b919050565b6000610206826101e8565b9050919050565b610216816101fb565b82525050565b6000602082019050610231600083018461020d565b9291505056fea2646970667358221220bbb9de6df611cb0835ca45d13fc106511ac3a0e4fb3aed04fdc0cbdfbdd0d34164736f6c63430008090033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x16D831F6 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0x67CB61B6 EQ PUSH2 0x57 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x55 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x178 JUMP JUMPDEST PUSH2 0x75 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5F PUSH2 0x138 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6C SWAP2 SWAP1 PUSH2 0x21C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x8A JUMPI PUSH2 0x89 PUSH2 0x1A5 JUMP JUMPDEST JUMPDEST EQ ISZERO PUSH2 0xBF JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xB5 JUMPI PUSH2 0xB4 PUSH2 0x1A5 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH2 0x135 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xD4 JUMPI PUSH2 0xD3 PUSH2 0x1A5 JUMP JUMPDEST JUMPDEST EQ ISZERO PUSH2 0x109 JUMPI PUSH1 0x1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xFF JUMPI PUSH2 0xFE PUSH2 0x1A5 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH2 0x134 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x12E JUMPI PUSH2 0x12D PUSH2 0x1A5 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x160 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x172 DUP2 PUSH2 0x153 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18E JUMPI PUSH2 0x18D PUSH2 0x14E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x19C DUP5 DUP3 DUP6 ADD PUSH2 0x163 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x1E5 JUMPI PUSH2 0x1E4 PUSH2 0x1A5 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x1F6 DUP3 PUSH2 0x1D4 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x206 DUP3 PUSH2 0x1E8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x216 DUP2 PUSH2 0x1FB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x231 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x20D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBB 0xB9 0xDE PUSH14 0xF611CB0835CA45D13FC106511AC3 LOG0 0xE4 0xFB GASPRICE 0xED DIV REVERT 0xC0 0xCB 0xDF 0xBD 0xD0 0xD3 COINBASE PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ",
							"sourceMap": "57:672:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;282:288;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;650:76;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;282:288;352:1;340:7;335:13;;;;;;;;:::i;:::-;;:18;332:232;;;377:12;368:6;;:21;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;332:232;;;439:1;429:7;424:13;;;;;;;;:::i;:::-;;:16;420:134;;;468:10;459:6;;:19;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;420:134;;;525:14;516:6;;:23;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;420:134;332:232;282:288;:::o;650:76::-;691:4;713:6;;;;;;;;;;;706:13;;650:76;:::o;88:117:1:-;197:1;194;187:12;334:105;413:1;406:5;403:12;393:40;;429:1;426;419:12;393:40;334:105;:::o;445:151::-;497:5;535:6;522:20;513:29;;551:39;584:5;551:39;:::i;:::-;445:151;;;;:::o;602:341::-;667:6;716:2;704:9;695:7;691:23;687:32;684:119;;;722:79;;:::i;:::-;684:119;842:1;867:59;918:7;909:6;898:9;894:22;867:59;:::i;:::-;857:69;;813:123;602:341;;;;:::o;949:180::-;997:77;994:1;987:88;1094:4;1091:1;1084:15;1118:4;1115:1;1108:15;1135:111;1214:1;1207:5;1204:12;1194:46;;1220:18;;:::i;:::-;1194:46;1135:111;:::o;1252:123::-;1295:7;1324:5;1313:16;;1330:39;1363:5;1330:39;:::i;:::-;1252:123;;;:::o;1381:::-;1435:9;1468:30;1492:5;1468:30;:::i;:::-;1455:43;;1381:123;;;:::o;1510:139::-;1601:41;1636:5;1601:41;:::i;:::-;1596:3;1589:54;1510:139;;:::o;1655:230::-;1752:4;1790:2;1779:9;1775:18;1767:26;;1803:75;1875:1;1864:9;1860:17;1851:6;1803:75;:::i;:::-;1655:230;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "124200",
								"executionCost": "171",
								"totalCost": "124371"
							},
							"external": {
								"getChoice()": "2568",
								"setChoice(uint8)": "24744"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 57,
									"end": 729,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 57,
									"end": 729,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 57,
									"end": 729,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 57,
									"end": 729,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 57,
									"end": 729,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 57,
									"end": 729,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 57,
									"end": 729,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 57,
									"end": 729,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 57,
									"end": 729,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 729,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 57,
									"end": 729,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 57,
									"end": 729,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 57,
									"end": 729,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 57,
									"end": 729,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 57,
									"end": 729,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57,
									"end": 729,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 57,
									"end": 729,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57,
									"end": 729,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 729,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 57,
									"end": 729,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 729,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220bbb9de6df611cb0835ca45d13fc106511ac3a0e4fb3aed04fdc0cbdfbdd0d34164736f6c63430008090033",
									".code": [
										{
											"begin": 57,
											"end": 729,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 57,
											"end": 729,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57,
											"end": 729,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57,
											"end": 729,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 57,
											"end": 729,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 729,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 57,
											"end": 729,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 57,
											"end": 729,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 729,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 729,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 729,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 57,
											"end": 729,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 57,
											"end": 729,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57,
											"end": 729,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57,
											"end": 729,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 57,
											"end": 729,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 57,
											"end": 729,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 57,
											"end": 729,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 57,
											"end": 729,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 729,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 729,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 57,
											"end": 729,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 57,
											"end": 729,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 57,
											"end": 729,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 729,
											"name": "PUSH",
											"source": 0,
											"value": "16D831F6"
										},
										{
											"begin": 57,
											"end": 729,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57,
											"end": 729,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 57,
											"end": 729,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 729,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 729,
											"name": "PUSH",
											"source": 0,
											"value": "67CB61B6"
										},
										{
											"begin": 57,
											"end": 729,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57,
											"end": 729,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 57,
											"end": 729,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 729,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 57,
											"end": 729,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57,
											"end": 729,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 729,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 729,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 282,
											"end": 570,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 282,
											"end": 570,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 282,
											"end": 570,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 282,
											"end": 570,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 282,
											"end": 570,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 282,
											"end": 570,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 282,
											"end": 570,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 282,
											"end": 570,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 282,
											"end": 570,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 282,
											"end": 570,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 282,
											"end": 570,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 282,
											"end": 570,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 282,
											"end": 570,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 282,
											"end": 570,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 282,
											"end": 570,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 282,
											"end": 570,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 282,
											"end": 570,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 282,
											"end": 570,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 282,
											"end": 570,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 282,
											"end": 570,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 282,
											"end": 570,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 282,
											"end": 570,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 650,
											"end": 726,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 650,
											"end": 726,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 650,
											"end": 726,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 650,
											"end": 726,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 650,
											"end": 726,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 650,
											"end": 726,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 650,
											"end": 726,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 650,
											"end": 726,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 650,
											"end": 726,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 650,
											"end": 726,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 650,
											"end": 726,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 650,
											"end": 726,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 650,
											"end": 726,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 650,
											"end": 726,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 650,
											"end": 726,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 650,
											"end": 726,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 650,
											"end": 726,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 650,
											"end": 726,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 650,
											"end": 726,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 650,
											"end": 726,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 650,
											"end": 726,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 650,
											"end": 726,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 650,
											"end": 726,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 282,
											"end": 570,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 282,
											"end": 570,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 352,
											"end": 353,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 340,
											"end": 347,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 335,
											"end": 348,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 335,
											"end": 348,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 335,
											"end": 348,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 335,
											"end": 348,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 335,
											"end": 348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 335,
											"end": 348,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 335,
											"end": 348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 335,
											"end": 348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 335,
											"end": 348,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 335,
											"end": 348,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 335,
											"end": 348,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 335,
											"end": 348,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 335,
											"end": 348,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 335,
											"end": 353,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 332,
											"end": 564,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 332,
											"end": 564,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 332,
											"end": 564,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 377,
											"end": 389,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 368,
											"end": 374,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 368,
											"end": 374,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 368,
											"end": 389,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 368,
											"end": 389,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 368,
											"end": 389,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 368,
											"end": 389,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 368,
											"end": 389,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 368,
											"end": 389,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 368,
											"end": 389,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 368,
											"end": 389,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 368,
											"end": 389,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 368,
											"end": 389,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 368,
											"end": 389,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 368,
											"end": 389,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 368,
											"end": 389,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 368,
											"end": 389,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 368,
											"end": 389,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 368,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 368,
											"end": 389,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 368,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 368,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 368,
											"end": 389,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 368,
											"end": 389,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 368,
											"end": 389,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 368,
											"end": 389,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 368,
											"end": 389,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 368,
											"end": 389,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 368,
											"end": 389,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 368,
											"end": 389,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 368,
											"end": 389,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 368,
											"end": 389,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 332,
											"end": 564,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 332,
											"end": 564,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 332,
											"end": 564,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 332,
											"end": 564,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 439,
											"end": 440,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 429,
											"end": 436,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 424,
											"end": 437,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 424,
											"end": 437,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 424,
											"end": 437,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 424,
											"end": 437,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 424,
											"end": 437,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 424,
											"end": 437,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 424,
											"end": 437,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 424,
											"end": 437,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 424,
											"end": 437,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 424,
											"end": 437,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 424,
											"end": 437,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 424,
											"end": 437,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 424,
											"end": 437,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 424,
											"end": 440,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 420,
											"end": 554,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 420,
											"end": 554,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 420,
											"end": 554,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 468,
											"end": 478,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 459,
											"end": 465,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 459,
											"end": 465,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 459,
											"end": 478,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 459,
											"end": 478,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 459,
											"end": 478,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 459,
											"end": 478,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 459,
											"end": 478,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 459,
											"end": 478,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 459,
											"end": 478,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 459,
											"end": 478,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 459,
											"end": 478,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 459,
											"end": 478,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 459,
											"end": 478,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 459,
											"end": 478,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 459,
											"end": 478,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 459,
											"end": 478,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 459,
											"end": 478,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 459,
											"end": 478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 459,
											"end": 478,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 459,
											"end": 478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 459,
											"end": 478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 459,
											"end": 478,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 459,
											"end": 478,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 459,
											"end": 478,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 459,
											"end": 478,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 459,
											"end": 478,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 459,
											"end": 478,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 459,
											"end": 478,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 459,
											"end": 478,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 459,
											"end": 478,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 459,
											"end": 478,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 420,
											"end": 554,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 420,
											"end": 554,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 420,
											"end": 554,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 420,
											"end": 554,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 525,
											"end": 539,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 516,
											"end": 522,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 516,
											"end": 522,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 516,
											"end": 539,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 516,
											"end": 539,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 516,
											"end": 539,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 516,
											"end": 539,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 516,
											"end": 539,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 516,
											"end": 539,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 516,
											"end": 539,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 516,
											"end": 539,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 516,
											"end": 539,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 516,
											"end": 539,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 516,
											"end": 539,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 516,
											"end": 539,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 516,
											"end": 539,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 516,
											"end": 539,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 516,
											"end": 539,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 516,
											"end": 539,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 516,
											"end": 539,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 516,
											"end": 539,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 516,
											"end": 539,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 516,
											"end": 539,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 516,
											"end": 539,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 516,
											"end": 539,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 516,
											"end": 539,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 516,
											"end": 539,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 516,
											"end": 539,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 516,
											"end": 539,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 516,
											"end": 539,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 516,
											"end": 539,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 516,
											"end": 539,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 420,
											"end": 554,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 420,
											"end": 554,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 332,
											"end": 564,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 332,
											"end": 564,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 282,
											"end": 570,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 282,
											"end": 570,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 650,
											"end": 726,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 650,
											"end": 726,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 691,
											"end": 695,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 713,
											"end": 719,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 713,
											"end": 719,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 713,
											"end": 719,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 713,
											"end": 719,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 713,
											"end": 719,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 713,
											"end": 719,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 713,
											"end": 719,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 713,
											"end": 719,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 713,
											"end": 719,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 713,
											"end": 719,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 713,
											"end": 719,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 706,
											"end": 719,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 706,
											"end": 719,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 650,
											"end": 726,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 650,
											"end": 726,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 334,
											"end": 439,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 334,
											"end": 439,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 413,
											"end": 414,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 406,
											"end": 411,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 403,
											"end": 415,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 393,
											"end": 433,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 393,
											"end": 433,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 429,
											"end": 430,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 419,
											"end": 431,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 393,
											"end": 433,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 393,
											"end": 433,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 334,
											"end": 439,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 439,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 445,
											"end": 596,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 445,
											"end": 596,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 497,
											"end": 502,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 535,
											"end": 541,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 522,
											"end": 542,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 513,
											"end": 542,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 513,
											"end": 542,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 551,
											"end": 590,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 584,
											"end": 589,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 551,
											"end": 590,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 551,
											"end": 590,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 551,
											"end": 590,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 551,
											"end": 590,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 445,
											"end": 596,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 445,
											"end": 596,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 445,
											"end": 596,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 445,
											"end": 596,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 445,
											"end": 596,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 602,
											"end": 943,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 602,
											"end": 943,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 667,
											"end": 673,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 716,
											"end": 718,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 704,
											"end": 713,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 695,
											"end": 702,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 691,
											"end": 714,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 687,
											"end": 719,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 684,
											"end": 803,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 684,
											"end": 803,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 684,
											"end": 803,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 722,
											"end": 801,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 722,
											"end": 801,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 722,
											"end": 801,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 722,
											"end": 801,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 722,
											"end": 801,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 684,
											"end": 803,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 684,
											"end": 803,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 842,
											"end": 843,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 867,
											"end": 926,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 918,
											"end": 925,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 909,
											"end": 915,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 898,
											"end": 907,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 894,
											"end": 916,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 867,
											"end": 926,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 867,
											"end": 926,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 867,
											"end": 926,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 867,
											"end": 926,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 857,
											"end": 926,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 857,
											"end": 926,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 813,
											"end": 936,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 602,
											"end": 943,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 602,
											"end": 943,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 602,
											"end": 943,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 602,
											"end": 943,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 602,
											"end": 943,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 949,
											"end": 1129,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 949,
											"end": 1129,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 997,
											"end": 1074,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 994,
											"end": 995,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 987,
											"end": 1075,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1094,
											"end": 1098,
											"name": "PUSH",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1091,
											"end": 1092,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1084,
											"end": 1099,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1118,
											"end": 1122,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1115,
											"end": 1116,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1123,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1135,
											"end": 1246,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 1135,
											"end": 1246,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1214,
											"end": 1215,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1207,
											"end": 1212,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1204,
											"end": 1216,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1194,
											"end": 1240,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1194,
											"end": 1240,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1220,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1220,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 1220,
											"end": 1238,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1220,
											"end": 1238,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1220,
											"end": 1238,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1194,
											"end": 1240,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1194,
											"end": 1240,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1135,
											"end": 1246,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1135,
											"end": 1246,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1252,
											"end": 1375,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1252,
											"end": 1375,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1295,
											"end": 1302,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1324,
											"end": 1329,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1313,
											"end": 1329,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1313,
											"end": 1329,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1330,
											"end": 1369,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1363,
											"end": 1368,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1330,
											"end": 1369,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 1330,
											"end": 1369,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1330,
											"end": 1369,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1330,
											"end": 1369,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1252,
											"end": 1375,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1252,
											"end": 1375,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1252,
											"end": 1375,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1252,
											"end": 1375,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1381,
											"end": 1504,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1381,
											"end": 1504,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1435,
											"end": 1444,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1468,
											"end": 1498,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1492,
											"end": 1497,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1468,
											"end": 1498,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1468,
											"end": 1498,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1468,
											"end": 1498,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1468,
											"end": 1498,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1455,
											"end": 1498,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1455,
											"end": 1498,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1381,
											"end": 1504,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1381,
											"end": 1504,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1381,
											"end": 1504,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1381,
											"end": 1504,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1510,
											"end": 1649,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1510,
											"end": 1649,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1601,
											"end": 1642,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1636,
											"end": 1641,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1601,
											"end": 1642,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1601,
											"end": 1642,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1601,
											"end": 1642,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1601,
											"end": 1642,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1596,
											"end": 1599,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1589,
											"end": 1643,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1510,
											"end": 1649,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1510,
											"end": 1649,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1510,
											"end": 1649,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1655,
											"end": 1885,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1655,
											"end": 1885,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1752,
											"end": 1756,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1790,
											"end": 1792,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1779,
											"end": 1788,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1775,
											"end": 1793,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1767,
											"end": 1793,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1767,
											"end": 1793,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1803,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 1875,
											"end": 1876,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1864,
											"end": 1873,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1860,
											"end": 1877,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1851,
											"end": 1857,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1803,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1803,
											"end": 1878,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1803,
											"end": 1878,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 1803,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1655,
											"end": 1885,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1655,
											"end": 1885,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1655,
											"end": 1885,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1655,
											"end": 1885,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1655,
											"end": 1885,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"getChoice()": "67cb61b6",
							"setChoice(uint8)": "16d831f6"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getChoice\",\"outputs\":[{\"internalType\":\"enum EnumDemo.size\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum EnumDemo.size\",\"name\":\"_choice\",\"type\":\"uint8\"}],\"name\":\"setChoice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"frenchFries.sol\":\"EnumDemo\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"frenchFries.sol\":{\"keccak256\":\"0xc17f46b1ab52fea39017114ec3de07b6b0a84c0f6cd6c80b32bf57805942a71b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c21577b54c2056b2a5ca5763fb8692aa60fcbf612bb8d3f16db89acf26f6c90\",\"dweb:/ipfs/QmXsbUjnihez5h7GXbMrqMLCxQp5y4UJd8tUW96TCREqje\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "frenchFries.sol:EnumDemo",
								"label": "choice",
								"offset": 0,
								"slot": "0",
								"type": "t_enum(size)5"
							}
						],
						"types": {
							"t_enum(size)5": {
								"encoding": "inplace",
								"label": "enum EnumDemo.size",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"frenchFries.sol": {
				"ast": {
					"absolutePath": "frenchFries.sol",
					"exportedSymbols": {
						"EnumDemo": [
							58
						]
					},
					"id": 59,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "33:22:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "EnumDemo",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 58,
							"linearizedBaseContracts": [
								58
							],
							"name": "EnumDemo",
							"nameLocation": "66:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "EnumDemo.size",
									"id": 5,
									"members": [
										{
											"id": 2,
											"name": "REGULAR",
											"nameLocation": "120:7:0",
											"nodeType": "EnumValue",
											"src": "120:7:0"
										},
										{
											"id": 3,
											"name": "LARGE",
											"nameLocation": "128:5:0",
											"nodeType": "EnumValue",
											"src": "128:5:0"
										},
										{
											"id": 4,
											"name": "SUPERSIZE",
											"nameLocation": "134:9:0",
											"nodeType": "EnumValue",
											"src": "134:9:0"
										}
									],
									"name": "size",
									"nameLocation": "114:4:0",
									"nodeType": "EnumDefinition",
									"src": "109:35:0"
								},
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "choice",
									"nameLocation": "176:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 58,
									"src": "171:11:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_enum$_size_$5",
										"typeString": "enum EnumDemo.size"
									},
									"typeName": {
										"id": 7,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 6,
											"name": "size",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 5,
											"src": "171:4:0"
										},
										"referencedDeclaration": 5,
										"src": "171:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_enum$_size_$5",
											"typeString": "enum EnumDemo.size"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 47,
										"nodeType": "Block",
										"src": "322:248:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 19,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 16,
																"name": "_choice",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 11,
																"src": "340:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_size_$5",
																	"typeString": "enum EnumDemo.size"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_size_$5",
																	"typeString": "enum EnumDemo.size"
																}
															],
															"id": 15,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "335:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 14,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "335:4:0",
																"typeDescriptions": {}
															}
														},
														"id": 17,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "335:13:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 18,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "352:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "335:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 45,
													"nodeType": "Block",
													"src": "406:158:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 31,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 28,
																			"name": "_choice",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 11,
																			"src": "429:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_enum$_size_$5",
																				"typeString": "enum EnumDemo.size"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_enum$_size_$5",
																				"typeString": "enum EnumDemo.size"
																			}
																		],
																		"id": 27,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "424:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 26,
																			"name": "uint",
																			"nodeType": "ElementaryTypeName",
																			"src": "424:4:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 29,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "424:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 30,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "439:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "424:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 43,
																"nodeType": "Block",
																"src": "498:56:0",
																"statements": [
																	{
																		"expression": {
																			"id": 41,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 38,
																				"name": "choice",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 8,
																				"src": "516:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_enum$_size_$5",
																					"typeString": "enum EnumDemo.size"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"expression": {
																					"id": 39,
																					"name": "size",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 5,
																					"src": "525:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_enum$_size_$5_$",
																						"typeString": "type(enum EnumDemo.size)"
																					}
																				},
																				"id": 40,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "SUPERSIZE",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 4,
																				"src": "525:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_enum$_size_$5",
																					"typeString": "enum EnumDemo.size"
																				}
																			},
																			"src": "516:23:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_enum$_size_$5",
																				"typeString": "enum EnumDemo.size"
																			}
																		},
																		"id": 42,
																		"nodeType": "ExpressionStatement",
																		"src": "516:23:0"
																	}
																]
															},
															"id": 44,
															"nodeType": "IfStatement",
															"src": "420:134:0",
															"trueBody": {
																"id": 37,
																"nodeType": "Block",
																"src": "441:52:0",
																"statements": [
																	{
																		"expression": {
																			"id": 35,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 32,
																				"name": "choice",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 8,
																				"src": "459:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_enum$_size_$5",
																					"typeString": "enum EnumDemo.size"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"expression": {
																					"id": 33,
																					"name": "size",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 5,
																					"src": "468:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_enum$_size_$5_$",
																						"typeString": "type(enum EnumDemo.size)"
																					}
																				},
																				"id": 34,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "LARGE",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 3,
																				"src": "468:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_enum$_size_$5",
																					"typeString": "enum EnumDemo.size"
																				}
																			},
																			"src": "459:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_enum$_size_$5",
																				"typeString": "enum EnumDemo.size"
																			}
																		},
																		"id": 36,
																		"nodeType": "ExpressionStatement",
																		"src": "459:19:0"
																	}
																]
															}
														}
													]
												},
												"id": 46,
												"nodeType": "IfStatement",
												"src": "332:232:0",
												"trueBody": {
													"id": 25,
													"nodeType": "Block",
													"src": "354:46:0",
													"statements": [
														{
															"expression": {
																"id": 23,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 20,
																	"name": "choice",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 8,
																	"src": "368:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_size_$5",
																		"typeString": "enum EnumDemo.size"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 21,
																		"name": "size",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5,
																		"src": "377:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_size_$5_$",
																			"typeString": "type(enum EnumDemo.size)"
																		}
																	},
																	"id": 22,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "REGULAR",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2,
																	"src": "377:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_size_$5",
																		"typeString": "enum EnumDemo.size"
																	}
																},
																"src": "368:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_size_$5",
																	"typeString": "enum EnumDemo.size"
																}
															},
															"id": 24,
															"nodeType": "ExpressionStatement",
															"src": "368:21:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "16d831f6",
									"id": 48,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setChoice",
									"nameLocation": "291:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "_choice",
												"nameLocation": "306:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "301:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_size_$5",
													"typeString": "enum EnumDemo.size"
												},
												"typeName": {
													"id": 10,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 9,
														"name": "size",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 5,
														"src": "301:4:0"
													},
													"referencedDeclaration": 5,
													"src": "301:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_size_$5",
														"typeString": "enum EnumDemo.size"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "300:14:0"
									},
									"returnParameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "322:0:0"
									},
									"scope": 58,
									"src": "282:288:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 56,
										"nodeType": "Block",
										"src": "696:30:0",
										"statements": [
											{
												"expression": {
													"id": 54,
													"name": "choice",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "713:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_size_$5",
														"typeString": "enum EnumDemo.size"
													}
												},
												"functionReturnParameters": 53,
												"id": 55,
												"nodeType": "Return",
												"src": "706:13:0"
											}
										]
									},
									"functionSelector": "67cb61b6",
									"id": 57,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getChoice",
									"nameLocation": "659:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 49,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "668:2:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "691:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_size_$5",
													"typeString": "enum EnumDemo.size"
												},
												"typeName": {
													"id": 51,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 50,
														"name": "size",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 5,
														"src": "691:4:0"
													},
													"referencedDeclaration": 5,
													"src": "691:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_size_$5",
														"typeString": "enum EnumDemo.size"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "690:6:0"
									},
									"scope": 58,
									"src": "650:76:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 59,
							"src": "57:672:0",
							"usedErrors": []
						}
					],
					"src": "33:696:0"
				},
				"id": 0
			}
		}
	}
}