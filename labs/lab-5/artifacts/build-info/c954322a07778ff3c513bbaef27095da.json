{
	"id": "c954322a07778ff3c513bbaef27095da",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"whishlist.sol": {
				"content": "//SPDX-License-Identifier: MIT\n\npragma solidity 0.8.17;\n\n// contract Whitelist {\n//     address owner;\n//     mapping(address=>bool) whitelistedAddresses;\n\n//     constructor() {\n//         owner = msg.sender;\n//     }\n\n//     modifier onlyOwner() {\n//         require(msg.sender==owner, \"Function caller is not the owner of the contract\");\n//         _;\n//     }\n\n//     function addUser(address _addressToWhitelist) public onlyOwner {\n//         whitelistedAddresses[_addressToWhitelist] = true;\n//     }\n\n//     // *** Write a function that deletes a particular mapping\n\n\n//     function verifyUser(address _whitelistedAddress) public view returns(bool) {\n//         bool userIsWhitelisted = whitelistedAddresses[_whitelistedAddress];\n//         return userIsWhitelisted;\n//     }\n\n// }\n\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"sources": {
			"whishlist.sol": {
				"ast": {
					"absolutePath": "whishlist.sol",
					"exportedSymbols": {},
					"id": 2,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						}
					],
					"src": "32:759:0"
				},
				"id": 0
			}
		}
	}
}